{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","avatar","src","alt","content","name","messageItem","time","messageData","HW1","Affair","priorityType","affair","priority","low","middle","high","taskName","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","affairs_wrapper","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","keyPressHandler","addUser","error","totalUsers","users","inputClass","input_error","input_underlined","errorText","input_wrapper","value","onChange","onKeyPress","required","input_label","input_helper","width","height","xmlns","fill-rule","clip-rule","d","user","GreetingContainer","addUserCallback","setName","setError","alert","length","e","currentTarget","key","HW3","setUsers","newUser","v1","App","header","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.c3fdc310.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairs_wrapper\":\"Affairs_affairs_wrapper__3cTgG\",\"taskName\":\"Affairs_taskName__Rf7ig\",\"low\":\"Affairs_low__1RrbR\",\"middle\":\"Affairs_middle__1oKMT\",\"high\":\"Affairs_high__3bfAG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__8WR15\",\"content\":\"Message_content__Ltxgc\",\"avatar\":\"Message_avatar__3FT3j\",\"name\":\"Message_name__Tzmp0\",\"messageItem\":\"Message_messageItem__27M5e\",\"time\":\"Message_time__HOFTG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userInput\":\"Greeting_userInput__oujK0\",\"input_wrapper\":\"Greeting_input_wrapper__1ao85\",\"input_underlined\":\"Greeting_input_underlined__3qbzm\",\"input_label\":\"Greeting_input_label__1Ikwn\",\"input_helper\":\"Greeting_input_helper__2PpkR\",\"input_error\":\"Greeting_input_error__37nm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Sc4o\",\"header\":\"App_header__3x5Hh\"};","import React from 'react'\nimport s from \"./Message.module.css\"\n\ntype propsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: propsType) {\n    return (\n        <div className={s.message}>\n            <img className={s.avatar} src={props.avatar} alt=\"\"/>\n            <div className={s.content}>\n                <h2 className={s.name}>{props.name}</h2>\n                <span className={s.messageItem}>{props.message}</span>\n                <time className={s.time}>{props.time}</time>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://image.freepik.com/free-photo/waist-up-portrait-of-handsome-serious-unshaven-male-keeps-hands-together-dressed-in-dark-blue-shirt-has-talk-with-interlocutor-stands-against-white-wall-self-confident-man-freelancer_273609-16320.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n\n            <h3>Homeworks 1</h3>\n\n            {/*should work (должно работать)*/}\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n\n            {/*для личного творчества, могу проверить*/}\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport s from \"./Affairs.module.css\"\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    }// need to fix\n\n    const priorityType =\n        (props.affair.priority === \"low\") ? `${s.low}` : (props.affair.priority === \"middle\") ?  `${s.middle}` : `${s.high}`\n    return (\n        <div>\n            <ul>\n                <li className={s.taskName}>{props.affair.name}</li>\n                <li className={priorityType}>[{props.affair.priority}]</li>\n                <li>\n                    <button onClick={deleteCallback}>X</button>\n                </li>\n            </ul>\n\n\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport s from './Affairs.module.css'\nimport {AffairType, FilterType} from './HW2'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType)=>void\n    deleteAffairCallback: (_id: number)=>void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter('all')} // need to fix\n    const setHigh = () => {props.setFilter('high')}\n    const setMiddle = () => {props.setFilter('middle')}\n    const setLow = () => {props.setFilter('low')}\n\n    return (\n        <div className={s.affairs_wrapper}>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle' // need to fix any\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: string\n} // need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'Anime', priority: 'low'},\n    {_id: 3, name: 'Games', priority: 'low'},\n    {_id: 4, name: 'Work', priority: 'high'},\n    {_id: 5, name: 'Html & Css', priority: 'middle'}\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === 'high') return affairs.filter(a => a.priority === 'high') // need to fix\n    if (filter === 'low') return affairs.filter(a => a.priority === 'low')\n    if (filter === 'middle') return affairs.filter(a => a.priority === 'middle')\n    else return affairs\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter(a => a._id !== _id) // need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState< Array<AffairType> >(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <h3>Homeworks 2</h3>\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport s from './Greeting.module.css'\nimport {UserType} from \"./HW3\";\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\n    keyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void// need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n    users: Array<UserType>\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, keyPressHandler, addUser, error, totalUsers, users} // деструктуризация пропсов\n) => {\n    const inputClass = (error !== \"\") ? `${s.input_error} ${s.input_underlined}` : `${s.input_underlined}` // need to fix with (?:)\n    const errorText = (error !== \"\") ? `${error}` : `${totalUsers} users`\n\n    return (\n        <div>\n            <div className={s.input_wrapper}>\n                <label className={inputClass}>\n                    <input value={name} onChange={setNameCallback} onKeyPress={keyPressHandler} required/>\n                    <span className={s.input_label}>Name</span>\n                    <span className={s.input_helper}>{errorText}</span>\n                    <button onClick={addUser}>\n                        <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\"\n                             clip-rule=\"evenodd\">\n                            <path\n                                d=\"M11.5 0c6.347 0 11.5 5.153 11.5 11.5s-5.153 11.5-11.5 11.5-11.5-5.153-11.5-11.5 5.153-11.5 11.5-11.5zm0 1c5.795 0 10.5 4.705 10.5 10.5s-4.705 10.5-10.5 10.5-10.5-4.705-10.5-10.5 4.705-10.5 10.5-10.5zm.5 10h6v1h-6v6h-1v-6h-6v-1h6v-6h1v6z\"/>\n                        </svg>\n                    </button>\n\n                </label>\n                <ul>\n                    {users.map(user => {\n                        return <li>{user.name}</li>\n                    })}\n                </ul>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent,KeyboardEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        setName(e.currentTarget.value) // need to fix\n    }\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === \"Enter\") {\n            addUser()\n        }\n    }\n    const addUser = () => {\n        if (name === \"\") {\n            setError('Write correct name')\n        } else {\n            setError('')\n            addUserCallback(name)\n            alert(`Hello  ${name}!`) // need to fix\n            setName(\"\")\n        }\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            users={users}\n            setNameCallback={setNameCallback}\n            keyPressHandler={onKeyPressHandler}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        const newUser = {_id: v1(), name: name}\n        setUsers([...users, newUser]) // need to fix\n    }\n\n    return (\n        <div>\n            <h3>Homeworks 3</h3>\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n        </div>\n    )\n}\n\nexport default HW3\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2'\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div className={s.header}><h1>React Homeworks:</h1></div>\n            <hr/>\n            <HW1/>\n            <hr/>\n            <HW2/>\n            <hr/>\n            <HW3/>\n            <hr/>\n            {/*<HW4/>*/}\n            {/*<HW5/>*/}\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}